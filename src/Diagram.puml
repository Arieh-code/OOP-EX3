@startuml
'https://plantuml.com/class-diagram


interface GraphInterface
interface GraphAlgoInterface





class GNode {
+edges_in : Edges
+edges_out : Edges
+key : Integer
+location : Point3D
}

class Edge {
+Src : Integer
+Weight : Float
+Dest : Integer
}

class Digraph implements GraphInterface{
+node_map : Dictionary
+edge_map : Dictionary
+mc : Integer
-v_size()
-e_size()
-get_all_v()
-all_in_edges_of_node()
-all_out_edges_of_node()
-get_mc()
-add_edge()
-add_node()
-remove_node()
-remove_edge()
}

class GraphAlgo implements GraphAlgoInterface{
+graph : DiGraph
-get_graph()
-load_from_json()
-save_to_json()
-shortest_path()
-isConnected()
-{static}DFS()
-TSP()
-tsp_helper()
-centerPoint()
-plot_graph()
-dijkstraAlgo()
}

interface GraphAlgoInterface {
-get_graph() : GraphInterface
-load_from_json() : Boolean
-save_to_json() : Boolean
-shortest_path() : (Float, List)
-TSP() : (List[Integer], Float)
-centerPoint() : (Integer, Float)
-plot_graph() : Void
}

interface GraphInterface{
-v_size() : Integer
-e_size() : Integer
-get_all_v() : Dictionary
-all_in_edges_of_node() : Dictionary
-all_out_edges_of_node() : Dictionary
-get_mc() : Integer
-add_edge() : Boolean
-add_node() : Boolean
-remove_node() : Boolean
-remove_edge() : Boolean
}

class TestGraphAlgo{
-test_get_graph()
-test_load_from_json()
-test_save_to_json()
-test_shortest_path()
-test_center_point()
-test_plot_graph()
-test_tsp()
-test_dijkstraAlgo()
-test_runtimer()
}

class TestDiGraph{
-test_v_size()
-test_get_all_v()
-test_e_size()
-test_all_in_edges_of_node()
-test_all_out_edges_of_node()
-test_get_mc()
-test_add_edge()
-test_add_node()
-test_remove_node()
-test_remove_edge()
}

GNode::edges_in*--> Edge
GNode::edges_out*--> Edge

Digraph::node_map*-->GNode::key
Digraph::edge_map*-->GNode::edges_in
Digraph::edge_map*-->GNode::edges_out

GraphAlgo::graph *--> Digraph

TestGraphAlgo ..> GraphAlgo
TestDiGraph ..> Digraph
@enduml